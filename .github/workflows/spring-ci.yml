name: spring ci

on:
  pull_request:
    branches: main
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  static-analysis:
    name: Static analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          cache: 'gradle'

      - name: Execute check without tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check -x test

  test:
    needs: static-analysis
    runs-on: ubuntu-latest
    name: Testing on JDK 17
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          cache: 'gradle'
          
      - name: Execute tests
        uses: gradle/gradle-build-action@v2.2.1
        with:
          arguments: test
          
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/@v2
        with:
          files: "build/test-results/**/*.xml"

    build-and-deploy:
      needs: test
      runs-on: ubuntu-latest
      name: Build by gradle & Deploy on google cloudrun
      env:
        IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
      steps:
        - uses: actions/checkout@v2
        - name: Set up JDK
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'oracle'
            cache: 'gradle'

        - name: Execute build
          uses: gradle/gradle-build-action@v2.2.1
          with:
            arguments: build --exclude-task test

        - name: Setup Gcloud Account
          uses: google-github-actions/setup-gcloud@v0
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            service_account_email: ${{ secrets.GCP_EMAIL }}
            service_account_key: ${{ secrets.GCP_CREDENTIALS }}

        - name: Configure Docker
          run: gcloud auth configure-docker --quiet

        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Build Docker image
          run: docker build . -t $IMAGE_NAME

        - name: Push Docker image
          run: docker push $IMAGE_NAME

        - name: Deploy Docker image
          run: gcloud run deploy ${{ secrets.GCP_PROJECT_ID }} --image $IMAGE_NAME --region us-central1 --platform managed
